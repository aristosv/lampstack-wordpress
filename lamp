echo set variables
echo set a root password for mariadb: ; read database_root_pass
echo create a database for wordpress: ; read wordpress_database_name
echo create a username for wordpress database: ; read wordpress_database_user
echo create a password for wordpress database: ; read wordpress_database_pass
echo what is the domain name you will be hosting on this server: ; read domain_name

echo please wait...

echo updating
apt-get update > /dev/null 2>&1

echo upgrading
apt-get -y upgrade > /dev/null 2>&1

echo dist upgrading
apt-get -y dist-upgrade > /dev/null 2>&1

echo installing apache
apt-get install -y apache2 > /dev/null 2>&1

echo installing mariadb
apt-get install -y mariadb-server > /dev/null 2>&1

echo installing php
apt-get install -y php php-mysql libapache2-mod-php php-curl > /dev/null 2>&1

echo installing unzip
apt-get install -y unzip > /dev/null 2>&1

echo securing mariadb
echo set mariadb root password
mysql --user="root" --password="" --execute="SET PASSWORD FOR 'root'@'localhost' = PASSWORD('$database_root_pass');"

echo removing anonymous users
mysql --user="root" --password="" --execute="DELETE FROM mysql.user WHERE User='';"

echo disabling remote root logins
mysql --user="root" --password="" --execute="DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"

echo removing test database
mysql --user="root" --password="" --execute="DELETE FROM mysql.db WHERE Db='test' OR Db='test\_%';"

echo flushing privileges
mysql --user="root" --password="" --execute="FLUSH PRIVILEGES;"

echo creating database
mysql --user="root" --password="$database_root_pass" --execute="CREATE DATABASE $wordpress_database_name;"
mysql --user="root" --password="$database_root_pass" --execute="CREATE USER '$wordpress_database_user'@'localhost' IDENTIFIED BY '$wordpress_database_pass';"
mysql --user="root" --password="$database_root_pass" --execute="GRANT ALL ON $wordpress_database_name.* TO '$wordpress_database_user'@'localhost' IDENTIFIED BY '$wordpress_database_pass' WITH GRANT OPTION;"
mysql --user="root" --password="$database_root_pass" --execute="FLUSH PRIVILEGES;"

echo creating website folder
mkdir /var/www/html/$domain_name/

echo downloading wordpress
wget --no-check-certificate https://wordpress.org/latest.zip > /dev/null 2>&1

echo extracting wordpress
unzip latest.zip -d /tmp > /dev/null 2>&1
mv /tmp/wordpress/* /var/www/html/$domain_name/

echo setting permissions
chown -R www-data:www-data /var/www/html/$domain_name
chmod -R 755 /var/www/html/$domain_name

echo adding virtual host
echo "<VirtualHost *:80>" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo " DocumentRoot /var/www/html/$domain_name" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo " ServerName $domain_name" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "  <Directory /var/www/html/$domain_name/>" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "   Options Indexes FollowSymLinks MultiViews" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "   AllowOverride All" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "   Order allow,deny" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "   allow from all" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "  </Directory>" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo " ErrorLog \${APACHE_LOG_DIR}/$domain_name-error.log" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo " CustomLog \${APACHE_LOG_DIR}/$domain_name-access.log combined" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1
echo "</VirtualHost>" | tee -a /etc/apache2/sites-available/$domain_name.conf > /dev/null 2>&1

echo disabling default host
a2dissite 000-default.conf > /dev/null 2>&1

echo enabling $domain_name
a2ensite $domain_name.conf > /dev/null 2>&1

echo enabling mod-rewrite
a2enmod rewrite > /dev/null 2>&1

echo restarting apache
systemctl restart apache2.service

read -r -p "do you want to create a letsencrypt certificate for $domain_name? (y/n)?" input
case $input in
    [yY][eE][sS]|[yY])
 echo installing certbot
 echo "deb http://ftp.debian.org/debian stretch-backports main" >> /etc/apt/sources.list
 apt-get update > /dev/null 2>&1
 apt-get installing -y python-certbot-apache -t stretch-backports > /dev/null 2>&1
 echo running certification wizard
 certbot --apache -d $domain_name
 ;;
    [nN][oO]|[nN])
 echo you chose not to install a certificate
       ;;
    *)
 echo "Invalid input..."
 exit 1
 ;;
esac

echo visit $domain_name to start the wordpress installation wizard
